import matplotlib
import matplotlib.pyplot as plt
import numpy as np

plt.rcParams["figure.figsize"] = (5,3.2)
plt.rcParams['axes.axisbelow'] = True

width = 5  # the width of the bars

map_reduce_means = [2.1000000000000005, 2.2000000000000006, 2.2000000000000006, 2.3000000000000007, 2.3000000000000007, 2.600000000000001, 2.600000000000001, 2.600000000000001, 2.600000000000001, 1.8000000000000005, 1.2, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.6, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.8999999999999999, 0.8999999999999999, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 1.0999999999999999, 1.0999999999999999, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.4000000000000001, 1.3, 1.3, 1.3, 0.8999999999999999, 0.6, 0.6, 0.7, 0.7, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0.8999999999999999, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
sensor_framewrk = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 2.2, 2.2, 1.2000000000000002, 1.2000000000000002, 2.2, 2.2, 2.7, 2.2, 1.2000000000000002, 1.4000000000000004, 1.4000000000000004, 1.4000000000000004, 2.4000000000000004, 3.0000000000000004, 2.5000000000000004, 1.5000000000000004, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.7000000000000006, 1.7000000000000006, 1.7000000000000006, 1.7000000000000006, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 2.5000000000000004, 2.5000000000000004, 2.6000000000000004, 2.5000000000000004, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 2.3000000000000003, 2.3000000000000003, 1.3000000000000003, 1.4000000000000004, 1.4000000000000004, 1.4000000000000004, 1.4000000000000004, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.3000000000000003, 1.3000000000000003, 1.4000000000000004, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.2000000000000002, 2.2, 1.3000000000000003, 1.3000000000000003, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.6000000000000005, 1.5000000000000004, 1.5000000000000004, 1.4000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.5000000000000004, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.6000000000000005, 1.5000000000000004, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.1, 1.1, 1.1, 1.1, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.3000000000000003, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 1.2000000000000002, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
ddflow_framework = [0.8] * len(sensor_framewrk)
map_reduce_means = [n * 100.0 / 5 for n in map_reduce_means]
sensor_framewrk = [n * 100.0 / 5 for n in sensor_framewrk]
ddflow_framework = [n * 100.0 / 5 for n in ddflow_framework]
labels = np.arange(len(map_reduce_means))
ddflow_bottom = [map_reduce_means[i] + sensor_framewrk[i] for i in labels]
labels_ints = [5 * int(l) - width/2 for l in labels]

x = np.arange(len(labels))  # the label locations

fig, ax = plt.subplots()
ax.bar(labels_ints, sensor_framewrk, width, linewidth=0, label='SimpleSensor', color='green')
ax.bar(labels_ints, map_reduce_means, width, linewidth=0, label='MapReduce', bottom=sensor_framewrk, color='cornflowerblue')
ax.bar(labels_ints, ddflow_framework, width, linewidth=0, label='DDFlow', bottom=ddflow_bottom, color='orange')
ax.set_ylim([0,100])
ax.set_xlim([0,800])

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('Cluster Utilization (%)')
ax.set_xlabel('Time (s)')
ax.yaxis.grid()
# ax.set_xticks([60, 180, 300, 420, 540])
# ax.set_xticklabels([60 * l for l in labels_ints])
ax.legend(loc='upper right', prop={'size': 12})


# def autolabel(rects):
#     """Attach a text label above each bar in *rects*, displaying its height."""
#     for rect in rects:
#         height = rect.get_height()
#         ax.annotate('{}'.format(height),
#                     xy=(rect.get_x() + rect.get_width() / 2, height),
#                     xytext=(0, 3),  # 3 points vertical offset
#                     textcoords="offset points",
#                     ha='center', va='bottom')


# autolabel(rects1)
# autolabel(rects2)

fig.tight_layout()
# plt.show()
plt.savefig('cluster_util.png', bbox_inches='tight')